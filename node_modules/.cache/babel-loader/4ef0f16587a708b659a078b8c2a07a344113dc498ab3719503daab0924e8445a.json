{"ast":null,"code":"import React, { useState, useEffect, useRef, useContext } from 'react';\nimport ChatMessage from './chatMessage';\nimport ChatEvents from '../../lib/chatEvents';\nimport { StoreContext } from '../../store/configureStore';\nconst ChatRoom = props => {\n  const {\n    socket\n  } = props;\n  const [userId, setUserId] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const {\n    secretKey\n  } = useContext(StoreContext);\n  useEffect(() => {\n    const Events = new ChatEvents(socket, secretKey);\n    Events.receiveMessages(msg => {\n      setChatLog(arr => [...arr, {\n        ...msg,\n        time: `${new Date().toLocaleTimeString('ko-KR', {\n          hour: '2-digit',\n          minute: '2-digit'\n        })}`\n      }]);\n    });\n    setUserId(socket.id);\n    return () => {\n      setChatLog([]);\n      setUserId('');\n    };\n  }, []); // 자기가 최신 메시지를 보낼때 자동 스크롤하기\n\n  const Room = useRef(null);\n  useEffect(() => {\n    if (socket.id === chatLog[chatLog.length - 1]?.idx) {\n      if (Room.current.scroll) {\n        Room.current.scroll(0, Room.current.scrollHeight);\n      }\n    }\n  }, [chatLog]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"chat-room\",\n    style: {\n      display: \"flex\",\n      flexFlow: \"column nowrap\",\n      flex: \"1 0px\",\n      background: \"#E6DDC4\",\n      overflow: \"auto\"\n    },\n    ref: Room\n  }, /*#__PURE__*/React.createElement(ChatMessage, {\n    messages: chatLog,\n    userId: userId\n  }));\n};\nexport default ChatRoom;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}