{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/miniproject/front/src/Components/ApexChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApexChart = () => {\n  _s();\n  const {\n    data\n  } = useSelector(state => state.event);\n  const chartData = data.filter(item => item.isClosed).map(data => {\n    return {\n      dateEnd: data.dateEnd,\n      closedPrice: data.closedPrice\n    };\n  });\n  const series = chartData.reduce((result, data) => {\n    const {\n      dateEnd,\n      closedPrice\n    } = data;\n    const price = Number(closedPrice).toLocaleString;\n    result[0].data.push({\n      x: dateEnd,\n      y: price\n    });\n    return result;\n  }, [{\n    name: \"상품 거래 히스토리\",\n    data: []\n  }]);\n  const sortedSeries = series.map(serie => ({\n    ...serie,\n    data: serie.data.sort((a, b) => new Date(a.x) - new Date(b.x))\n  }));\n  console.log(sortedSeries);\n  const [options] = useState({\n    chart: {\n      type: \"area\",\n      height: 350,\n      zoom: {\n        enabled: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: \"straight\"\n    },\n    title: {\n      text: \"Fundamental Analysis of Stocks\",\n      align: \"left\"\n    },\n    subtitle: {\n      text: \"Price Movements\",\n      align: \"left\"\n    },\n    labels: \"Date\",\n    xaxis: {\n      type: \"datetime\"\n    },\n    yaxis: {\n      opposite: true\n    },\n    legend: {\n      horizontalAlign: \"left\"\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n        options: options,\n        series: series,\n        type: \"area\",\n        height: 350\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"html-dist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(ApexChart, \"diE2r6P4n/V6RinR26NMH6PDYe4=\", false, function () {\n  return [useSelector];\n});\n_c = ApexChart;\nexport default ApexChart;\nvar _c;\n$RefreshReg$(_c, \"ApexChart\");","map":{"version":3,"names":["React","useState","ReactApexChart","useSelector","ApexChart","data","state","event","chartData","filter","item","isClosed","map","dateEnd","closedPrice","series","reduce","result","price","Number","toLocaleString","push","x","y","name","sortedSeries","serie","sort","a","b","Date","console","log","options","chart","type","height","zoom","enabled","dataLabels","stroke","curve","title","text","align","subtitle","labels","xaxis","yaxis","opposite","legend","horizontalAlign"],"sources":["/Users/daniel/Documents/GitHub/miniproject/front/src/Components/ApexChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { useSelector } from \"react-redux\";\n\nconst ApexChart = () => {\n  const { data } = useSelector((state) => state.event);\n  const chartData = data\n    .filter((item) => item.isClosed)\n    .map((data) => {\n      return {\n        dateEnd: data.dateEnd,\n        closedPrice: data.closedPrice,\n      };\n    });\n\n  const series = chartData.reduce(\n    (result, data) => {\n      const { dateEnd, closedPrice } = data;\n      const price = Number(closedPrice).toLocaleString;\n      result[0].data.push({\n        x: dateEnd,\n        y: price,\n      });\n      return result;\n    },\n    [{ name: \"상품 거래 히스토리\", data: [] }]\n  );\n  const sortedSeries = series.map((serie) => ({\n    ...serie,\n    data: serie.data.sort((a, b) => new Date(a.x) - new Date(b.x)),\n  }));\n\n  console.log(sortedSeries);\n\n  const [options] = useState({\n    chart: {\n      type: \"area\",\n      height: 350,\n      zoom: {\n        enabled: false,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"straight\",\n    },\n\n    title: {\n      text: \"Fundamental Analysis of Stocks\",\n      align: \"left\",\n    },\n    subtitle: {\n      text: \"Price Movements\",\n      align: \"left\",\n    },\n    labels: \"Date\",\n    xaxis: {\n      type: \"datetime\",\n    },\n    yaxis: {\n      opposite: true,\n    },\n    legend: {\n      horizontalAlign: \"left\",\n    },\n  });\n\n  return (\n    <div>\n      <div id=\"chart\">\n        <ReactApexChart\n          options={options}\n          series={series}\n          type=\"area\"\n          height={350}\n        />\n      </div>\n      <div id=\"html-dist\"></div>\n    </div>\n  );\n};\n\nexport default ApexChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,WAAW,QAAQ,aAAa;AAAC;AAE1C,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM;IAAEC;EAAK,CAAC,GAAGF,WAAW,CAAEG,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;EACpD,MAAMC,SAAS,GAAGH,IAAI,CACnBI,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC,CAC/BC,GAAG,CAAEP,IAAI,IAAK;IACb,OAAO;MACLQ,OAAO,EAAER,IAAI,CAACQ,OAAO;MACrBC,WAAW,EAAET,IAAI,CAACS;IACpB,CAAC;EACH,CAAC,CAAC;EAEJ,MAAMC,MAAM,GAAGP,SAAS,CAACQ,MAAM,CAC7B,CAACC,MAAM,EAAEZ,IAAI,KAAK;IAChB,MAAM;MAAEQ,OAAO;MAAEC;IAAY,CAAC,GAAGT,IAAI;IACrC,MAAMa,KAAK,GAAGC,MAAM,CAACL,WAAW,CAAC,CAACM,cAAc;IAChDH,MAAM,CAAC,CAAC,CAAC,CAACZ,IAAI,CAACgB,IAAI,CAAC;MAClBC,CAAC,EAAET,OAAO;MACVU,CAAC,EAAEL;IACL,CAAC,CAAC;IACF,OAAOD,MAAM;EACf,CAAC,EACD,CAAC;IAAEO,IAAI,EAAE,YAAY;IAAEnB,IAAI,EAAE;EAAG,CAAC,CAAC,CACnC;EACD,MAAMoB,YAAY,GAAGV,MAAM,CAACH,GAAG,CAAEc,KAAK,KAAM;IAC1C,GAAGA,KAAK;IACRrB,IAAI,EAAEqB,KAAK,CAACrB,IAAI,CAACsB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACN,CAAC,CAAC,GAAG,IAAIQ,IAAI,CAACD,CAAC,CAACP,CAAC,CAAC;EAC/D,CAAC,CAAC,CAAC;EAEHS,OAAO,CAACC,GAAG,CAACP,YAAY,CAAC;EAEzB,MAAM,CAACQ,OAAO,CAAC,GAAGhC,QAAQ,CAAC;IACzBiC,KAAK,EAAE;MACLC,IAAI,EAAE,MAAM;MACZC,MAAM,EAAE,GAAG;MACXC,IAAI,EAAE;QACJC,OAAO,EAAE;MACX;IACF,CAAC;IACDC,UAAU,EAAE;MACVD,OAAO,EAAE;IACX,CAAC;IACDE,MAAM,EAAE;MACNC,KAAK,EAAE;IACT,CAAC;IAEDC,KAAK,EAAE;MACLC,IAAI,EAAE,gCAAgC;MACtCC,KAAK,EAAE;IACT,CAAC;IACDC,QAAQ,EAAE;MACRF,IAAI,EAAE,iBAAiB;MACvBC,KAAK,EAAE;IACT,CAAC;IACDE,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;MACLZ,IAAI,EAAE;IACR,CAAC;IACDa,KAAK,EAAE;MACLC,QAAQ,EAAE;IACZ,CAAC;IACDC,MAAM,EAAE;MACNC,eAAe,EAAE;IACnB;EACF,CAAC,CAAC;EAEF,oBACE;IAAA,wBACE;MAAK,EAAE,EAAC,OAAO;MAAA,uBACb,QAAC,cAAc;QACb,OAAO,EAAElB,OAAQ;QACjB,MAAM,EAAElB,MAAO;QACf,IAAI,EAAC,MAAM;QACX,MAAM,EAAE;MAAI;QAAA;QAAA;QAAA;MAAA;IACZ;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAK,EAAE,EAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACtB;AAEV,CAAC;AAAC,GA9EIX,SAAS;EAAA,QACID,WAAW;AAAA;AAAA,KADxBC,SAAS;AAgFf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}