{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/miniproject/front/src/Routes.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n/**\n * `<Router>` :  <BrowserRouter>의 줄임말이며, 최상위 컴포넌트를 감싸준다.\n * `<Switch>` : Switch 되면서 Route마다 조건을 검사하며 페이지를 렌더링한다. 한 페이지가 렌더링 됐을 때는 다른 Route는 렌더하지 않는다.\n *              (경로가 /일 때, /하위일 때의 모든 결과가 화면에 출력되지 않도록 한다.)\n * `<Route>` : <Route> 태그 안에는 라우팅할 경로와 컴포넌트에 대한 속성값을 준다.\n * `ex. <Route exact path=\"/main\" component={Main} />`\n * exact : exact 속성이 필요한 이유는 명확한 경로를 렌더링 시켜주기 위함이며,\n * 이 속성이 없을 경우 하위 경로의 페이지가 같이 나올 수 있다.\n * path : 이동할 경로의 URL의 경로 이름을 설정해준다.\n * component : 이동할 component를 설정해준다.\n */\n\nimport Login from \"./pages/Login/Login\";\nimport Main from \"./pages/Main/Main\";\nimport Event from \"./pages/Event/Event\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Routes extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/main\",\n          component: Main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/event\",\n          component: Event\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Routes;","map":{"version":3,"names":["React","BrowserRouter","Router","Switch","Route","Login","Main","Event","Routes","Component","render"],"sources":["/Users/daniel/Documents/GitHub/miniproject/front/src/Routes.js"],"sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n/**\n * `<Router>` :  <BrowserRouter>의 줄임말이며, 최상위 컴포넌트를 감싸준다.\n * `<Switch>` : Switch 되면서 Route마다 조건을 검사하며 페이지를 렌더링한다. 한 페이지가 렌더링 됐을 때는 다른 Route는 렌더하지 않는다.\n *              (경로가 /일 때, /하위일 때의 모든 결과가 화면에 출력되지 않도록 한다.)\n * `<Route>` : <Route> 태그 안에는 라우팅할 경로와 컴포넌트에 대한 속성값을 준다.\n * `ex. <Route exact path=\"/main\" component={Main} />`\n * exact : exact 속성이 필요한 이유는 명확한 경로를 렌더링 시켜주기 위함이며,\n * 이 속성이 없을 경우 하위 경로의 페이지가 같이 나올 수 있다.\n * path : 이동할 경로의 URL의 경로 이름을 설정해준다.\n * component : 이동할 component를 설정해준다.\n */\n\nimport Login from \"./pages/Login/Login\";\nimport Main from \"./pages/Main/Main\";\nimport Event from \"./pages/Event/Event\";\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/main\" component={Main} />\n          <Route exact path=\"/event\" component={Event} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default Routes;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,qBAAqB;AAAC;AAExC,MAAMC,MAAM,SAASR,KAAK,CAACS,SAAS,CAAC;EACnCC,MAAM,GAAG;IACP,oBACE,QAAC,MAAM;MAAA,uBACL,QAAC,MAAM;QAAA,wBACL,QAAC,KAAK;UAAC,KAAK;UAAC,IAAI,EAAC,GAAG;UAAC,SAAS,EAAEL;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG,eAC1C,QAAC,KAAK;UAAC,KAAK;UAAC,IAAI,EAAC,OAAO;UAAC,SAAS,EAAEC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG,eAC7C,QAAC,KAAK;UAAC,KAAK;UAAC,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAEC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACxC;MAAA;MAAA;MAAA;IAAA,QACF;EAEb;AACF;AAEA,eAAeC,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}