{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/miniproject/front/src/App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, BrowserRouter } from \"react-router-dom\";\n/**\n * `<Router>` :  <BrowserRouter>의 줄임말이며, 최상위 컴포넌트를 감싸준다.\n * `<Switch>` : Switch 되면서 Route마다 조건을 검사하며 페이지를 렌더링한다. 한 페이지가 렌더링 됐을 때는 다른 Route는 렌더하지 않는다.\n *              (경로가 /일 때, /하위일 때의 모든 결과가 화면에 출력되지 않도록 한다.)\n * `<Route>` : <Route> 태그 안에는 라우팅할 경로와 컴포넌트에 대한 속성값을 준다.\n * `ex. <Route exact path=\"/main\" component={Main} />`\n * exact : exact 속성이 필요한 이유는 명확한 경로를 렌더링 시켜주기 위함이며,\n * 이 속성이 없을 경우 하위 경로의 페이지가 같이 나올 수 있다.\n * path : 이동할 경로의 URL의 경로 이름을 설정해준다.\n * component : 이동할 component를 설정해준다.\n */\n\nimport Login from \"./Components/Login\";\nimport Main from \"./Components/Main\";\nimport Event from \"./Components/Event\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        component: Main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/event\",\n        component: Event\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n// class Routes extends React.Component {\n//   render() {\n//     return (\n\n//     );\n//   }\n// }\n\n// export default Routes;\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Login","Main","Event","App"],"sources":["/Users/daniel/Documents/GitHub/miniproject/front/src/App.js"],"sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  BrowserRouter,\n} from \"react-router-dom\";\n/**\n * `<Router>` :  <BrowserRouter>의 줄임말이며, 최상위 컴포넌트를 감싸준다.\n * `<Switch>` : Switch 되면서 Route마다 조건을 검사하며 페이지를 렌더링한다. 한 페이지가 렌더링 됐을 때는 다른 Route는 렌더하지 않는다.\n *              (경로가 /일 때, /하위일 때의 모든 결과가 화면에 출력되지 않도록 한다.)\n * `<Route>` : <Route> 태그 안에는 라우팅할 경로와 컴포넌트에 대한 속성값을 준다.\n * `ex. <Route exact path=\"/main\" component={Main} />`\n * exact : exact 속성이 필요한 이유는 명확한 경로를 렌더링 시켜주기 위함이며,\n * 이 속성이 없을 경우 하위 경로의 페이지가 같이 나올 수 있다.\n * path : 이동할 경로의 URL의 경로 이름을 설정해준다.\n * component : 이동할 component를 설정해준다.\n */\n\nimport Login from \"./Components/Login\";\nimport Main from \"./Components/Main\";\nimport Event from \"./Components/Event\";\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" component={Login} />\n        <Route path=\"/main\" component={Main} />\n        <Route path=\"/event\" component={Event} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\n// class Routes extends React.Component {\n//   render() {\n//     return (\n\n//     );\n//   }\n// }\n\n// export default Routes;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLH,aAAa,QACR,kBAAkB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOI,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AAAC;AAEvC,eAAe,SAASC,GAAG,GAAG;EAC5B,oBACE,QAAC,aAAa;IAAA,uBACZ,QAAC,MAAM;MAAA,wBACL,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,SAAS,EAAEH;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACpC,QAAC,KAAK;QAAC,IAAI,EAAC,OAAO;QAAC,SAAS,EAAEC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eACvC,QAAC,KAAK;QAAC,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAEC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAClC;IAAA;IAAA;IAAA;EAAA,QACK;AAEpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA,KApBwBC,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}