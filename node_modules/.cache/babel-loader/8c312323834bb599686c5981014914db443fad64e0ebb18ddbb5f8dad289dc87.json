{"ast":null,"code":"import React, { useEffect, useState, useContext } from 'react';\nimport RoomList from './roomList';\nimport ChatWindow from './talk/chatWindow';\nimport Loading from './loading';\nimport Modal from './modal';\nimport ChatEvents from './lib/chatEvents';\nimport { StoreContext } from './store/configureStore';\nconst WebChat = props => {\n  const {\n    socket,\n    config\n  } = props;\n  const {\n    handleRoom,\n    handleImageSize,\n    handleSecretKey,\n    step,\n    handleStep,\n    isModal\n  } = useContext(StoreContext);\n  useEffect(() => {\n    if (config?.imageSize) handleImageSize(config.imageSize);\n    if (config?.secretKey) handleSecretKey(config.secretKey);\n  }, []);\n  const Events = new ChatEvents(socket);\n  const [rooms, setRooms] = useState([]);\n  useEffect(() => {\n    Events.handleConnect(() => {\n      Events.getRooms(setRooms);\n    });\n    Events.handleDisConnect(() => {\n      handleStep(1);\n    });\n    Events.handleError(() => {\n      handleStep(1);\n    });\n    return () => {\n      socket.close();\n    };\n  }, [socket]);\n  useEffect(() => {\n    if (rooms.length > 0) {\n      if (rooms.length === 1) {\n        Events.joinRoom(rooms[0]);\n        handleRoom(rooms[0]);\n        handleStep(5);\n      } else {\n        handleStep(3);\n      }\n    }\n  }, [rooms]);\n  return /*#__PURE__*/React.createElement(\"article\", {\n    style: {\n      display: \"flex\",\n      flexFlow: \"column wrap\",\n      flex: \"1\",\n      justifyContent: \"center\",\n      position: \"relative\",\n      border: \"1px solid #678983\"\n    }\n  }, isModal && /*#__PURE__*/React.createElement(Modal, null), step < 2 && /*#__PURE__*/React.createElement(Loading, {\n    state: step\n  }), step === 3 && /*#__PURE__*/React.createElement(RoomList, {\n    rooms: rooms,\n    socket: socket\n  }), step > 4 && /*#__PURE__*/React.createElement(ChatWindow, {\n    socket: socket\n  }));\n};\nexport default WebChat;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}