{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/miniproject/front/src/Pages/Events/ReportAreaChart.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\n\n// material-ui\nimport { useTheme } from \"@mui/material/styles\";\n\n// third-party\nimport ReactApexChart from \"react-apexcharts\";\n\n// chart options\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst areaChartOptions = {\n  chart: {\n    height: 340,\n    type: \"line\",\n    toolbar: {\n      show: false\n    }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: \"smooth\",\n    width: 1.5\n  },\n  grid: {\n    strokeDashArray: 4\n  },\n  xaxis: {\n    type: \"datetime\",\n    categories: [\"2018-05-19T00:00:00.000Z\", \"2018-06-19T00:00:00.000Z\", \"2018-07-19T01:30:00.000Z\", \"2018-08-19T02:30:00.000Z\", \"2018-09-19T03:30:00.000Z\", \"2018-10-19T04:30:00.000Z\", \"2018-11-19T05:30:00.000Z\", \"2018-12-19T06:30:00.000Z\"],\n    labels: {\n      format: \"MMM\"\n    },\n    axisBorder: {\n      show: false\n    },\n    axisTicks: {\n      show: false\n    }\n  },\n  yaxis: {\n    show: false\n  },\n  tooltip: {\n    x: {\n      format: \"MM\"\n    }\n  }\n};\n\n// ==============================|| REPORT AREA CHART ||============================== //\n\nconst ReportAreaChart = () => {\n  _s();\n  const theme = useTheme();\n  const {\n    primary,\n    secondary\n  } = theme.palette.text;\n  const line = theme.palette.divider;\n  const [options, setOptions] = useState(areaChartOptions);\n  useEffect(() => {\n    setOptions(prevState => ({\n      ...prevState,\n      colors: [theme.palette.warning.main],\n      xaxis: {\n        labels: {\n          style: {\n            colors: [secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary]\n          }\n        }\n      },\n      grid: {\n        borderColor: line\n      },\n      tooltip: {\n        theme: \"light\"\n      },\n      legend: {\n        labels: {\n          colors: \"grey.500\"\n        }\n      }\n    }));\n  }, [primary, secondary, line, theme]);\n  const [series] = useState([{\n    name: \"Series 1\",\n    data: [58, 115, 28, 83, 63, 75, 35, 55]\n  }]);\n  return /*#__PURE__*/_jsxDEV(ReactApexChart, {\n    options: options,\n    series: series,\n    type: \"line\",\n    height: 345\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportAreaChart, \"etmGiL0t6fWgH+uwk8xBsRh/Pnw=\", false, function () {\n  return [useTheme];\n});\n_c = ReportAreaChart;\nexport default ReportAreaChart;\nvar _c;\n$RefreshReg$(_c, \"ReportAreaChart\");","map":{"version":3,"names":["useEffect","useState","useTheme","ReactApexChart","areaChartOptions","chart","height","type","toolbar","show","dataLabels","enabled","stroke","curve","width","grid","strokeDashArray","xaxis","categories","labels","format","axisBorder","axisTicks","yaxis","tooltip","x","ReportAreaChart","theme","primary","secondary","palette","text","line","divider","options","setOptions","prevState","colors","warning","main","style","borderColor","legend","series","name","data"],"sources":["/Users/daniel/Documents/GitHub/miniproject/front/src/Pages/Events/ReportAreaChart.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\n// material-ui\nimport { useTheme } from \"@mui/material/styles\";\n\n// third-party\nimport ReactApexChart from \"react-apexcharts\";\n\n// chart options\nconst areaChartOptions = {\n  chart: {\n    height: 340,\n    type: \"line\",\n    toolbar: {\n      show: false,\n    },\n  },\n  dataLabels: {\n    enabled: false,\n  },\n  stroke: {\n    curve: \"smooth\",\n    width: 1.5,\n  },\n  grid: {\n    strokeDashArray: 4,\n  },\n  xaxis: {\n    type: \"datetime\",\n    categories: [\n      \"2018-05-19T00:00:00.000Z\",\n      \"2018-06-19T00:00:00.000Z\",\n      \"2018-07-19T01:30:00.000Z\",\n      \"2018-08-19T02:30:00.000Z\",\n      \"2018-09-19T03:30:00.000Z\",\n      \"2018-10-19T04:30:00.000Z\",\n      \"2018-11-19T05:30:00.000Z\",\n      \"2018-12-19T06:30:00.000Z\",\n    ],\n    labels: {\n      format: \"MMM\",\n    },\n    axisBorder: {\n      show: false,\n    },\n    axisTicks: {\n      show: false,\n    },\n  },\n  yaxis: {\n    show: false,\n  },\n  tooltip: {\n    x: {\n      format: \"MM\",\n    },\n  },\n};\n\n// ==============================|| REPORT AREA CHART ||============================== //\n\nconst ReportAreaChart = () => {\n  const theme = useTheme();\n\n  const { primary, secondary } = theme.palette.text;\n  const line = theme.palette.divider;\n\n  const [options, setOptions] = useState(areaChartOptions);\n\n  useEffect(() => {\n    setOptions((prevState) => ({\n      ...prevState,\n      colors: [theme.palette.warning.main],\n      xaxis: {\n        labels: {\n          style: {\n            colors: [\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n            ],\n          },\n        },\n      },\n      grid: {\n        borderColor: line,\n      },\n      tooltip: {\n        theme: \"light\",\n      },\n      legend: {\n        labels: {\n          colors: \"grey.500\",\n        },\n      },\n    }));\n  }, [primary, secondary, line, theme]);\n\n  const [series] = useState([\n    {\n      name: \"Series 1\",\n      data: [58, 115, 28, 83, 63, 75, 35, 55],\n    },\n  ]);\n\n  return (\n    <ReactApexChart\n      options={options}\n      series={series}\n      type=\"line\"\n      height={345}\n    />\n  );\n};\n\nexport default ReportAreaChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}