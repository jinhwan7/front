{"ast":null,"code":"import React, { useState } from 'react';\nconst PartnerMessage = props => {\n  const {\n    idx,\n    message,\n    openImageModal,\n    time\n  } = props;\n  const [isHover, setIsHover] = useState(false);\n  const downloadImage = image => {\n    const imageLink = document.createElement(\"a\");\n    imageLink.href = image;\n    imageLink.download = `이미지_${Date.now()}.png`;\n    imageLink.click();\n    imageLink.remove();\n  };\n  const messageStyle = {\n    maxWidth: \"58%\",\n    padding: \"8px\",\n    margin: \"8px\",\n    fontSize: \"1rem\",\n    color: \"#1b1b1b\",\n    wordBreak: \"break-word\",\n    background: \"#eeeeee\",\n    borderRadius: \"6px\"\n  };\n  const boxStyle = {\n    position: \"relative\",\n    display: \"flex\",\n    flex: \"1\",\n    flexFlow: \"row\",\n    width: \"100%\",\n    margin: 0,\n    marginRight: \"auto\"\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingLeft: \"8px\",\n      fontSize: \"0.8rem\"\n    }\n  }, idx), /*#__PURE__*/React.createElement(\"p\", {\n    style: boxStyle\n  }, message.slice(0, 5) !== '@$IMG' ? /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"partner\",\n    style: messageStyle\n  }, message) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"partner-image\",\n    src: message.slice(5),\n    style: messageStyle,\n    onClick: () => openImageModal(message.slice(5)),\n    onMouseEnter: () => setIsHover(true),\n    onMouseLeave: () => setIsHover(false),\n    alt: \"\\uC804\\uC1A1\\uB41C \\uC774\\uBBF8\\uC9C0\"\n  }), isHover && /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      position: \"absolute\",\n      margin: \"8px\",\n      padding: \"3px\",\n      fontSize: \"0.8rem\",\n      color: \"#cecece\",\n      background: \"rgb(255, 99, 71, 50%)\",\n      border: \"none\"\n    },\n    onMouseEnter: () => setIsHover(true),\n    onMouseLeave: () => setIsHover(false),\n    onClick: () => downloadImage(message.slice(5))\n  }, \"Download\")), /*#__PURE__*/React.createElement(\"time\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"flex-end\",\n      marginBottom: \"8px\",\n      fontSize: \"0.7rem\"\n    }\n  }, time)));\n};\nexport default PartnerMessage;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}